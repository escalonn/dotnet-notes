tools: VS Code, Bash, Git, .NET Core CLI
shell:
    echo, cat, grep, mkdir, touch, cd, ls, which, find, pwd, rm, mv, cp,
    absolute paths, relative paths, /, ~, ., .., |, >, >>, $
    PATH environment variable, shell variables
Git: clone, pull, status, add, commit, push
.NET: basics of Framework vs. Core.
C#:
    procedural fundamentals
    variables
    basic data types, operators, control flow
    (static) methods
    console input and output
    strings, parsing strings as numbers
    arrays

did not cover:
nano
shell script
shell control flow
shell input, output, error
C# namespace, class, object, project, instance method, compilation
foreach
var

--------

tools: git, vs code, .net core sdk
shell commands (cd, ls, echo, nano, mkdir, mv, cp, cat, grep, touch, which, find, pwd)
minimal intro to git - clone, pull
pipe, output redirect
PATH environment variable
Basic Intro to .NET (history, libraries, components and architecture)
variables
Control flow
    conditionals (if, else-if, switch)
    loops(while, do-while, for)
handling user input - console read
Basic logic problems - fizzbuzz, grading system, display patterns etc.

variable scope
creating additional methods for code reuse
Arrays ( single dimensional )
Strings in C#
Assignment on array and string problems (swapping, palindrome. fibonacci, reversal etc.)

Intro to hackerrank/codesignal and intro to basic logic practise
Paired programming to solve intermediate problems like factorial, searching an array etc
basic git - clone, status, add, commit, push; creating a repo on github.

------

C# programs - File structure, Naming Convention, Hello World program anatomy
foreach loop
Static class
creating non-static classes
fields
Basics of OOP
public vs private
Generic Collections
List vs Array

Intro to Data Structures and Algorithm designs
HashSet
Arrays, multidimensional arrays (2-D, jagged)
Basics of sorting algorithm
Bubble sort
Constructors
new keyword

debugger
Recursion
Fibonacci w/ recursion vs w/ iteration
Merge sort w/ recursion
Whiteboarding
Properties
var


Dictionary
Intro to complexity of algorithm, Big-O Notation
More algorithms problem solving Eg; Binary search
Comparing complexity of bubble sort vs merge sort

String concatenation vs String builder vs String buffer

Collections review
Exceptions
Custom Exceptions

Linked List vs List

namespace vs assembly

Datatypes (value vs reference) with heap and stack references

Structs

Advanced Methods and parameters (named, optional, params, command line args)

------

visual studio

Non generic Collections (Stack, Queue, ArrayList, HashTable etc...)

Intro Testing and Logging
MSTest/NUnit/xUnit
Phases of Unit Testing

Singleton Pattern

Inheritance, this and base keyword
Access Specifiers
Method overloading and overriding
Interface
Extended Modifiers (abstract, static, sealed)
Abstraction in detail, abstract class vs interface
Assignment on object and class leveraging polymorphism and inheritance
IEnumerable

----

Basics of threads
async
Garbage Collection - finalize and destructor
Reflections and attributes
