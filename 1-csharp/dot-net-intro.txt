.NET
    Classic - Windows, outdated. web forms
    Standard - just a set of restrictions on Classic, no Windows-specific stuff
        set of APIs that are implemented by the Base Class Library of a .NET implementation
        like an "interface" which both Framework and Core "implement"
    Core - subset of Standard

In Standard:
UWP - Desktop (Standard)
*SignalR, MVC, WebAPI/WCF - Web Services (Core)
*Entity Framework - Data (Core)
Xamarin - Mobile (Standard)
    write once, outputs iOS, Android

Mono framework repackaged .NET Classic for Unix.
really just worked for web stuff

languages for .NET now
C# F# VB.NET R Python JS/TS (Java with help of Red Hat)
F# functional C#

for C#
CLI common language infrastructure spec
    VES virtual execution system, aka the runtime.
        the execution environment for a .NET application
    Standard Libraries
        includes:
        BCL base class library
            common data types for numbers, strings, etc.
            exceptions, attributes, collections, delegates, I/O, threads
        also reflection, networking, parallel programming
    CTS common type system
        defines classes, structs, enums, interfaces, delegates,
        access modifiers, inheritance, value/reference types, etc.

implementations:
    Mono
        Mono runtime (VES)
        used by Xamarin for Mobile
        used by Unity for games
    .NET Framework
        CLR common language runtime (VES)
            JIT just in time compiler
                gets assembly, compiles to machine code
            memory management / garbage collection
            exception handling
            thread management
        FCL framework class library (Standard Libraries)
    .NET Core
        CoreCLR (VES)
            has a JIT as well, RyuJIT
            all the features of the CLR
            "the CLR for .NET Core"
        CoreFX (Standard Libraries)
    UWP
        .NET Native

managed code
    portability (same platform, different architecture)
    memory management
    performance
    inter-operability (platform-independent)

GAC global assembly cache
strongly named. no two assemblies can have the same name
%systemroot%\assembly and %systemroot%\Microsoft.NET\assembly
more for .NET Classic. outdated.

now instead use portable:
NuGet.Config
NuGet is package repository, networked where GAC is only on each machine
deletes unused assemblies

for VS 2017 Community install C#, (+ .NET, .NET Core), Web packages
