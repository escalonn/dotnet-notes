to move the connection string from generated dbcontext file to JSON configuration file:
1. add package `Microsoft.Extensions.Configuration.Json` to the console app. (turns out the other two packages from before are dependencies that are automatically added)
2. add new item to console app project, type "JSON File", named "appsettings.json", with these contents:
```{
  "ConnectionStrings": {
    "<name you give to this data source>": "<your connection string>"
  }
}```
3. right-click on "appsettings.json" in the solution explorer, go to Properties, change "Copy to Output Directory" to "Copy if newer".
4. make a ".gitignore" file in your solution directory, with the contents "appsettings.json".
5. in `Program.Main` of your console app, add the code:
```var configBuilder = new ConfigurationBuilder()
    .SetBasePath(Directory.GetCurrentDirectory())
    .AddJsonFile("appsettings.json", optional: true, reloadOnChange: true);

IConfigurationRoot configuration = configBuilder.Build();```
6. to get the options ready to make a dbcontext, use the code (substituting the right stuff):
```var optionsBuilder = new DbContextOptionsBuilder<YourAppDbContext>();
optionsBuilder.UseSqlServer(configuration.GetConnectionString("<name you gave to the data source>"));
var options = optionsBuilder.Options;```
7. then, when you need to make a dbcontext (to give you to your repository classes): `new YourAppDbContext(options)`.
